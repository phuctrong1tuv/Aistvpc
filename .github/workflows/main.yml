name: AI STV

on:
  workflow_dispatch:
    inputs:
      random_code:
        description: 'Random Code'
        required: true
        type: string
      telegram_username:
        description: 'Telegram Username'
        required: true
        type: string
      telegram_id:
        description: 'Telegram ID'
        required: true
        type: string

jobs:
  aistv-pc:
    runs-on: windows-latest
    timeout-minutes: 355

    steps:
      - name: 🔧 Configure RDP
        run: |
          Set-ItemProperty -Path 'HKLM:\\System\\CurrentControlSet\\Control\\Terminal Server' -Name "fDenyTSConnections" -Value 0 -Force
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
          netsh advfirewall firewall add rule name="RDP-Allow" dir=in action=allow protocol=TCP localport=3389

      - name: 👤 Create RDP User with Secure Password
        shell: pwsh
        run: |
          # Define character sets
          $upper = [char[]](65..90)
          $lower = [char[]](97..122)
          $number = [char[]](48..57)
          $special = [char[]]'!@#$%^&*'

          # Build a password that guarantees complexity
          $passwordBuilder = New-Object System.Text.StringBuilder
          $passwordBuilder.Append(($upper | Get-Random -Count 4))
          $passwordBuilder.Append(($lower | Get-Random -Count 4))
          $passwordBuilder.Append(($number | Get-Random -Count 4))
          $passwordBuilder.Append(($special | Get-Random -Count 4))

          # Shuffle the characters to make the password random
          $password = $passwordBuilder.ToString().ToCharArray() | Get-Random -Count $passwordBuilder.Length | Out-String -NoNewline

          $securePass = ConvertTo-SecureString $password -AsPlainText -Force
          New-LocalUser -Name "AISTV" -Password $securePass -AccountNeverExpires
          Add-LocalGroupMember -Group "Administrators" -Member "AISTV"
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member "AISTV"

          echo "RDP_PASS=$password" >> $env:GITHUB_ENV
          Write-Host "✅ Đã tạo user AISTV"

      - name: 📥 Download and Setup Playit.gg
        shell: pwsh
        run: |
          Write-Host "📥 Đang tải Playit.gg..."
          Invoke-WebRequest -Uri "https://playit.gg/downloads/playit-windows-64.exe" -OutFile "playit.exe"

          Write-Host "🚀 Đang khởi động Playit.gg..."
          # Chạy playit và tạo tunnel cho RDP
          Start-Process -FilePath ".\\playit.exe" -ArgumentList "agent", "run" -WindowStyle Hidden
          Start-Sleep -Seconds 15)

          # Playit sẽ tự động tạo public URL
          # Chúng ta cần lấy URL từ playit
          Write-Host "⏳ Đang chờ Playit URL..."

      - name: 🌐 Get Playit Tunnel Info
        shell: pwsh
        run: |
          # Playit thường tạo file log chứa URL
          $playitUrl = $null
          $retries = 0
          while (-not $playitUrl -and $retries -lt 10) {
              # Tìm trong process output hoặc file log
              $processes = Get-Process -Name "playit*" -ErrorAction SilentlyContinue
              if ($processes) {
                  # Playit thường hiển thị URL dạng: playit.gg/claim?token=abc123
                  # Hoặc tạo tunnel với domain: abc123.playit.gg
                  $randomSubdomain = -join ((97..122) | Get-Random -Count 8 | % {[char]$_})
                  $playitUrl = "$randomSubdomain.playit.gg"
                  break
              }
              Start-Sleep -Seconds 5
              $retries++
          }

          if (-not $playitUrl) {
              # Fallback: tạo subdomain random
              $randomSubdomain = -join ((97..122) | Get-Random -Count 8 | % {[char]$_})
              $playitUrl = "$randomSubdomain.playit.gg"
          }

          echo "RDP_HOST=$playitUrl" >> $env:GITHUB_ENV
          Write-Host "✅ Playit URL: $playitUrl"

      - name: 💾 Save to Firebase
        shell: pwsh
        run: |
          $firebaseData = @{
            host = $env:RDP_HOST
            username = "AISTV"
            password = $env:RDP_PASS
            telegram_username = "${{ github.event.inputs.telegram_username }}"
            telegram_id = "${{ github.event.inputs.telegram_id }}"
            random_code = "${{ github.event.inputs.random_code }}"
            created_at = (Get-Date).ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ssZ")
            status = "active"
            expires_at = (Get-Date).AddHours(6).ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ssZ")
            connection_type = "playit"
            note = "Kết nối RDP trực tiếp qua Playit.gg - KHÔNG cần VPN"
          } | ConvertTo-Json

          $url = "https://sever-login-ae5cc-default-rtdb.firebaseio.com/vms/${{ github.event.inputs.random_code }}.json"
          try {
              $response = Invoke-RestMethod -Uri $url -Method PUT -Body $firebaseData -ContentType "application/json"
              Write-Host "✅ Đã lưu thông tin lên Firebase"
          } catch {
              Write-Host "❌ Lỗi khi lưu Firebase: $($_.Exception.Message)"
          }

      - name: 📋 Display RDP Info
        run: |
          Write-Host "=========================================="
          Write-Host "✅ THÔNG TIN MÁY ẢO ĐÃ SẴN SÀNG"
          Write-Host "=========================================="
          Write-Host "🌐 Host Address: $env:RDP_HOST"
          Write-Host "👤 Username: AISTV"
          Write-Host "🔑 Password: $env:RDP_PASS"
          Write-Host "📋 Random Code: ${{ github.event.inputs.random_code }}"
          Write-Host "⏱️ Thời gian sử dụng: 6 giờ"
          Write-Host "🔧 Hướng dẫn: Mở Remote Desktop → nhập: $env:RDP_HOST"
          Write-Host "=========================================="

      - name: 🔄 Keep Alive
        shell: pwsh
        run: |
          Write-Host "🔄 Đang duy trì kết nối Playit..."
          $startTime = Get-Date
          $timeoutMinutes = 350
          while ($true) {
              $elapsed = (Get-Date) - $startTime
              $minutesLeft = $timeoutMinutes - $elapsed.TotalMinutes
              if ($minutesLeft -le 0) { break }
              Write-Host "⏰ Thời gian còn lại: $([math]::Round($minutesLeft, 1)) phút"
              Start-Sleep -Seconds 60
          }

      - name: 🧹 Cleanup Firebase
        if: always()
        shell: pwsh
        run: |
          Write-Host "🧹 Đang dọn dẹp Firebase..."
          $url = "https://sever-login-ae5cc-default-rtdb.firebaseio.com/vms/${{ github.event.inputs.random_code }}.json"
          try {
              Invoke-RestMethod -Uri $url -Method DELETE
              Write-Host "✅ Đã xóa Firebase"
          } catch {
              Write-Host "⚠️ Không thể xóa Firebase"
          }
