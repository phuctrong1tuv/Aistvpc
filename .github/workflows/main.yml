name: Persistent RDP (72h Auto-Restore & Same IP/Password)

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 */3 * *'  # Tự chạy lại mỗi 3 ngày (72 tiếng)

jobs:
  rdp-server:
    runs-on: windows-latest
    timeout-minutes: 4320 # 72h

    steps:
      - name: 🔹 Enable RDP Access
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 0
          netsh advfirewall firewall add rule name="RDP-Allow" dir=in action=allow protocol=TCP localport=3389
          Restart-Service TermService

      - name: 🔹 Create or Restore RDP User
        run: |
          Add-Type -AssemblyName System.Security
          $passPath = "C:\backup\rdp-pass.txt"
          if (Test-Path $passPath) {
            $password = Get-Content $passPath
            Write-Host "🔁 Reusing existing RDP password."
          } else {
            $chars = ([char[]](33..126))
            $password = -join (1..16 | ForEach-Object { $chars | Get-Random })
            New-Item -ItemType File -Path $passPath -Force | Out-Null
            Set-Content -Path $passPath -Value $password
            Write-Host "🔐 Created new password and saved for reuse."
          }
          $securePass = ConvertTo-SecureString $password -AsPlainText -Force
          if (-not (Get-LocalUser -Name "RDP" -ErrorAction SilentlyContinue)) {
            New-LocalUser -Name "RDP" -Password $securePass -AccountNeverExpires
            Add-LocalGroupMember -Group "Administrators" -Member "RDP"
            Add-LocalGroupMember -Group "Remote Desktop Users" -Member "RDP"
          } else {
            Set-LocalUser -Name "RDP" -Password $securePass
          }
          echo "RDP_PASSWORD=$password" >> $env:GITHUB_ENV

      - name: 🔹 Install & Connect Tailscale (Static Hostname)
        run: |
          $url = "https://pkgs.tailscale.com/stable/tailscale-setup-1.82.0-amd64.msi"
          $path = "$env:TEMP\tailscale.msi"
          Invoke-WebRequest -Uri $url -OutFile $path
          Start-Process msiexec.exe -ArgumentList "/i `"$path`" /quiet /norestart" -Wait
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=windows-rdp-stv
          $ip = (& "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4)[0]
          echo "TAILSCALE_IP=$ip" >> $env:GITHUB_ENV

      - name: 🔹 Restore Backup (if exists)
        uses: actions/download-artifact@v4
        with:
          name: windows-backup
          path: C:\backup
        continue-on-error: true

      - name: 🔹 Extract Previous Environment
        run: |
          if (Test-Path C:\backup\system-backup.zip) {
            Write-Host "🗂️ Restoring full system environment..."
            Expand-Archive C:\backup\system-backup.zip -DestinationPath C:\ -Force
          } else {
            Write-Host "🆕 No previous backup found — starting fresh."
          }

      - name: 🔹 Show Current RDP Credentials
        run: |
          Write-Host "=============================="
          Write-Host " 🖥️  RDP INFO"
          Write-Host " Address: $env:TAILSCALE_IP"
          Write-Host " User: RDP"
          Write-Host " Pass: $env:RDP_PASSWORD"
          Write-Host "=============================="

      - name: 🔹 Keep Machine Alive (72h with Warnings)
        run: |
          for ($i = 0; $i -lt 864; $i++) {
            $remaining = 72 - ($i * 5 / 60)
            if ($remaining -le 1) {
              Write-Host "⚠️  Gần hết thời gian ($remaining giờ còn lại). Sắp sao lưu hệ thống..."
            }
            Start-Sleep -Seconds 300
          }

      - name: 🔹 Cleanup Temporary Files (Free Disk Space)
        run: |
          Write-Host "🧹 Dọn file tạm để tránh đầy ổ C..."
          Remove-Item "$env:TEMP\*" -Recurse -Force -ErrorAction SilentlyContinue
          Remove-Item "C:\Windows\Temp\*" -Recurse -Force -ErrorAction SilentlyContinue
          Write-Host "✅ Dọn xong!"

      - name: 🔹 Backup Environment (Apps, User Data)
        run: |
          Write-Host "💾 Đang sao lưu toàn bộ dữ liệu..."
          $backupPath = "C:\backup\system-backup.zip"
          if (Test-Path $backupPath) { Remove-Item $backupPath -Force }
          Compress-Archive -Path "C:\Users", "C:\Program Files", "C:\ProgramData", "C:\backup" -DestinationPath $backupPath -Force

      - name: 🔹 Upload Backup to GitHub (Artifact)
        uses: actions/upload-artifact@v4
        with:
          name: windows-backup
          path: C:\backup
